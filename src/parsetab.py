
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BODY BUNDLE CLASS_GUARD COMMA HASH_ROCKET IDENTIFIER LEFT_BRACE LEFT_PAR NAKED_VAR PROMISE PROMISE_ARROW PROMISE_GUARD QUOTED_STRING RIGHT_BRACE RIGHT_PAR SEMICOLONpolicy :\n              | blocksblocks : block\n              | block blocksblock : bundle\n             | body\n             | promisebundle : BUNDLE bundletype bundleid arglist bundlebodybundletype : IDENTIFIERbundleid : IDENTIFIERbundlebody : LEFT_BRACE bundle_decl RIGHT_BRACEbundle_decl :\n                   | bundlestatementsbundlestatements : bundlestatement\n                        | bundlestatement bundlestatementsbundlestatement : promise_guard classpromises_declpromise_guard : PROMISE_GUARDclasspromises_decl :\n                          | classpromisesclasspromises : classpromise\n                     | classpromise classpromisesclasspromise : classguard\n                    | promise_declpromise_decl : promise_line SEMICOLONpromise_line : promiser constraints_decl\n                    | promiser PROMISE_ARROW rval constraints_declpromiser : QUOTED_STRINGconstraints_decl :\n                        | constraintsconstraints : constraint\n                   | constraint COMMA constraintsconstraint : constraint_id HASH_ROCKET rvalconstraint_id : IDENTIFIERbody : BODY bodytype bodyid arglist bodybodybodytype : IDENTIFIERbodyid : IDENTIFIERbodybody : LEFT_BRACE inner_bodybody RIGHT_BRACEinner_bodybody :\n                      | bodyattribsbodyattribs : bodyattrib\n                   | bodyattrib bodyattribsbodyattrib : classguard\n                  | selection SEMICOLONselection : selection_id HASH_ROCKET rvalselection_id : IDENTIFIERpromise : PROMISE promisetype promiseid arglist bodybodypromisetype : IDENTIFIERpromiseid : IDENTIFIERarglist :\n               | LEFT_PAR RIGHT_PAR\n               | LEFT_PAR arglist_items RIGHT_PAR\n               | LEFT_PAR arglist_items COMMA RIGHT_PARarglist_items : arglist_item\n                     | arglist_items COMMA arglist_itemarglist_item : IDENTIFIERlist : LEFT_BRACE RIGHT_BRACE\n            | LEFT_BRACE list_items RIGHT_BRACE\n            | LEFT_BRACE list_items COMMA RIGHT_BRACElist_items : list_item\n                  | list_items COMMA list_itemlist_item : IDENTIFIER\n                 | QUOTED_STRING\n                 | NAKED_VAR\n                 | usefunctionusefunction : function_id farglistfunction_id : IDENTIFIER\n                   | NAKED_VARfarglist : LEFT_PAR RIGHT_PAR\n                | LEFT_PAR farglist_items RIGHT_PAR\n                | LEFT_PAR farglist_items COMMA RIGHT_PARfarglist_items : farglist_item\n                      | farglist_items COMMA farglist_itemfarglist_item : IDENTIFIER\n                     | QUOTED_STRING\n                     | NAKED_VAR\n                     | usefunctionclassguard : CLASS_GUARDrval : IDENTIFIER\n            | QUOTED_STRING\n            | NAKED_VAR\n            | list\n            | usefunction'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,10,27,33,35,51,63,],[-1,0,-2,-3,-5,-6,-7,-4,-8,-34,-46,-11,-37,]),'BUNDLE':([0,3,4,5,6,27,33,35,51,63,],[7,7,-5,-6,-7,-8,-34,-46,-11,-37,]),'BODY':([0,3,4,5,6,27,33,35,51,63,],[8,8,-5,-6,-7,-8,-34,-46,-11,-37,]),'PROMISE':([0,3,4,5,6,27,33,35,51,63,],[9,9,-5,-6,-7,-8,-34,-46,-11,-37,]),'IDENTIFIER':([7,8,9,11,12,13,14,15,16,24,34,42,45,46,48,59,60,65,66,70,76,77,78,79,80,81,83,84,85,86,93,94,98,99,100,107,109,110,111,],[12,14,16,18,-9,20,-35,22,-47,32,50,32,50,-42,-77,74,-27,-43,76,76,-78,-79,-80,-81,-82,89,74,74,76,-56,-65,103,-57,89,-68,-58,-69,103,-70,]),'LEFT_BRACE':([17,18,19,20,21,22,23,25,26,29,41,61,66,70,85,],[-49,-10,-49,-36,-49,-48,28,34,34,-50,-51,-52,81,81,81,]),'LEFT_PAR':([17,18,19,20,21,22,76,78,82,89,91,103,105,],[24,-10,24,-36,24,-48,-66,-67,94,-66,-67,-66,-67,]),'RIGHT_PAR':([24,30,31,32,42,62,93,94,100,101,102,103,104,105,106,109,110,111,112,],[29,41,-53,-55,61,-54,-65,100,-68,109,-71,-73,-74,-75,-76,-69,111,-70,-72,]),'RIGHT_BRACE':([28,34,36,37,38,39,40,43,44,45,46,48,52,53,54,55,56,57,64,65,67,68,81,87,88,89,90,91,92,93,99,100,108,109,111,],[-12,-38,51,-13,-14,-18,-17,63,-39,-40,-42,-77,-15,-16,-19,-20,-22,-23,-41,-43,-21,-24,86,98,-59,-61,-62,-63,-64,-65,107,-68,-60,-69,-70,]),'PROMISE_GUARD':([28,38,39,40,48,53,54,55,56,57,67,68,],[40,40,-18,-17,-77,-16,-19,-20,-22,-23,-21,-24,]),'COMMA':([30,31,32,62,72,76,77,78,79,80,86,87,88,89,90,91,92,93,97,98,100,101,102,103,104,105,106,107,108,109,111,112,],[42,-53,-55,-54,84,-78,-79,-80,-81,-82,-56,99,-59,-61,-62,-63,-64,-65,-32,-57,-68,110,-71,-73,-74,-75,-76,-58,-60,-69,-70,-72,]),'CLASS_GUARD':([34,39,40,45,46,48,55,56,57,65,68,],[48,48,-17,48,-42,-77,48,-22,-23,-43,-24,]),'QUOTED_STRING':([39,40,48,55,56,57,66,68,70,81,85,94,99,110,],[60,-17,-77,60,-22,-23,77,-24,77,90,77,104,90,104,]),'SEMICOLON':([47,58,59,60,69,71,72,75,76,77,78,79,80,83,86,93,95,96,97,98,100,107,109,111,],[65,68,-28,-27,-25,-29,-30,-44,-78,-79,-80,-81,-82,-28,-56,-65,-26,-31,-32,-57,-68,-58,-69,-70,]),'HASH_ROCKET':([49,50,73,74,],[66,-45,85,-33,]),'PROMISE_ARROW':([59,60,],[70,-27,]),'NAKED_VAR':([66,70,81,85,94,99,110,],[78,78,91,78,105,91,105,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'policy':([0,],[1,]),'blocks':([0,3,],[2,10,]),'block':([0,3,],[3,3,]),'bundle':([0,3,],[4,4,]),'body':([0,3,],[5,5,]),'promise':([0,3,],[6,6,]),'bundletype':([7,],[11,]),'bodytype':([8,],[13,]),'promisetype':([9,],[15,]),'bundleid':([11,],[17,]),'bodyid':([13,],[19,]),'promiseid':([15,],[21,]),'arglist':([17,19,21,],[23,25,26,]),'bundlebody':([23,],[27,]),'arglist_items':([24,],[30,]),'arglist_item':([24,42,],[31,62,]),'bodybody':([25,26,],[33,35,]),'bundle_decl':([28,],[36,]),'bundlestatements':([28,38,],[37,52,]),'bundlestatement':([28,38,],[38,38,]),'promise_guard':([28,38,],[39,39,]),'inner_bodybody':([34,],[43,]),'bodyattribs':([34,45,],[44,64,]),'bodyattrib':([34,45,],[45,45,]),'classguard':([34,39,45,55,],[46,56,46,56,]),'selection':([34,45,],[47,47,]),'selection_id':([34,45,],[49,49,]),'classpromises_decl':([39,],[53,]),'classpromises':([39,55,],[54,67,]),'classpromise':([39,55,],[55,55,]),'promise_decl':([39,55,],[57,57,]),'promise_line':([39,55,],[58,58,]),'promiser':([39,55,],[59,59,]),'constraints_decl':([59,83,],[69,95,]),'constraints':([59,83,84,],[71,71,96,]),'constraint':([59,83,84,],[72,72,72,]),'constraint_id':([59,83,84,],[73,73,73,]),'rval':([66,70,85,],[75,83,97,]),'list':([66,70,85,],[79,79,79,]),'usefunction':([66,70,81,85,94,99,110,],[80,80,92,80,106,92,106,]),'function_id':([66,70,81,85,94,99,110,],[82,82,82,82,82,82,82,]),'list_items':([81,],[87,]),'list_item':([81,99,],[88,108,]),'farglist':([82,],[93,]),'farglist_items':([94,],[101,]),'farglist_item':([94,110,],[102,112,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> policy","S'",1,None,None,None),
  ('policy -> <empty>','policy',0,'p_policy','cf_parse.py',9),
  ('policy -> blocks','policy',1,'p_policy','cf_parse.py',10),
  ('blocks -> block','blocks',1,'p_blocks','cf_parse.py',15),
  ('blocks -> block blocks','blocks',2,'p_blocks','cf_parse.py',16),
  ('block -> bundle','block',1,'p_block','cf_parse.py',21),
  ('block -> body','block',1,'p_block','cf_parse.py',22),
  ('block -> promise','block',1,'p_block','cf_parse.py',23),
  ('bundle -> BUNDLE bundletype bundleid arglist bundlebody','bundle',5,'p_bundle','cf_parse.py',30),
  ('bundletype -> IDENTIFIER','bundletype',1,'p_bundletype','cf_parse.py',35),
  ('bundleid -> IDENTIFIER','bundleid',1,'p_bundleid','cf_parse.py',40),
  ('bundlebody -> LEFT_BRACE bundle_decl RIGHT_BRACE','bundlebody',3,'p_bundlebody','cf_parse.py',45),
  ('bundle_decl -> <empty>','bundle_decl',0,'p_bundle_decl','cf_parse.py',50),
  ('bundle_decl -> bundlestatements','bundle_decl',1,'p_bundle_decl','cf_parse.py',51),
  ('bundlestatements -> bundlestatement','bundlestatements',1,'p_bundlestatements','cf_parse.py',56),
  ('bundlestatements -> bundlestatement bundlestatements','bundlestatements',2,'p_bundlestatements','cf_parse.py',57),
  ('bundlestatement -> promise_guard classpromises_decl','bundlestatement',2,'p_bundlestatement','cf_parse.py',62),
  ('promise_guard -> PROMISE_GUARD','promise_guard',1,'p_promise_guard','cf_parse.py',67),
  ('classpromises_decl -> <empty>','classpromises_decl',0,'p_classpromises_decl','cf_parse.py',72),
  ('classpromises_decl -> classpromises','classpromises_decl',1,'p_classpromises_decl','cf_parse.py',73),
  ('classpromises -> classpromise','classpromises',1,'p_classpromises','cf_parse.py',78),
  ('classpromises -> classpromise classpromises','classpromises',2,'p_classpromises','cf_parse.py',79),
  ('classpromise -> classguard','classpromise',1,'p_classpromise','cf_parse.py',84),
  ('classpromise -> promise_decl','classpromise',1,'p_classpromise','cf_parse.py',85),
  ('promise_decl -> promise_line SEMICOLON','promise_decl',2,'p_promise_decl','cf_parse.py',90),
  ('promise_line -> promiser constraints_decl','promise_line',2,'p_promise_line','cf_parse.py',95),
  ('promise_line -> promiser PROMISE_ARROW rval constraints_decl','promise_line',4,'p_promise_line','cf_parse.py',96),
  ('promiser -> QUOTED_STRING','promiser',1,'p_promiser','cf_parse.py',101),
  ('constraints_decl -> <empty>','constraints_decl',0,'p_constraints_decl','cf_parse.py',106),
  ('constraints_decl -> constraints','constraints_decl',1,'p_constraints_decl','cf_parse.py',107),
  ('constraints -> constraint','constraints',1,'p_constraints','cf_parse.py',112),
  ('constraints -> constraint COMMA constraints','constraints',3,'p_constraints','cf_parse.py',113),
  ('constraint -> constraint_id HASH_ROCKET rval','constraint',3,'p_constraint','cf_parse.py',118),
  ('constraint_id -> IDENTIFIER','constraint_id',1,'p_constraint_id','cf_parse.py',123),
  ('body -> BODY bodytype bodyid arglist bodybody','body',5,'p_body','cf_parse.py',130),
  ('bodytype -> IDENTIFIER','bodytype',1,'p_bodytype','cf_parse.py',135),
  ('bodyid -> IDENTIFIER','bodyid',1,'p_bodyid','cf_parse.py',140),
  ('bodybody -> LEFT_BRACE inner_bodybody RIGHT_BRACE','bodybody',3,'p_bodybody','cf_parse.py',145),
  ('inner_bodybody -> <empty>','inner_bodybody',0,'p_inner_bodybody','cf_parse.py',150),
  ('inner_bodybody -> bodyattribs','inner_bodybody',1,'p_inner_bodybody','cf_parse.py',151),
  ('bodyattribs -> bodyattrib','bodyattribs',1,'p_bodyattribs','cf_parse.py',156),
  ('bodyattribs -> bodyattrib bodyattribs','bodyattribs',2,'p_bodyattribs','cf_parse.py',157),
  ('bodyattrib -> classguard','bodyattrib',1,'p_bodyattrib','cf_parse.py',162),
  ('bodyattrib -> selection SEMICOLON','bodyattrib',2,'p_bodyattrib','cf_parse.py',163),
  ('selection -> selection_id HASH_ROCKET rval','selection',3,'p_selection','cf_parse.py',168),
  ('selection_id -> IDENTIFIER','selection_id',1,'p_selection_id','cf_parse.py',173),
  ('promise -> PROMISE promisetype promiseid arglist bodybody','promise',5,'p_promise','cf_parse.py',180),
  ('promisetype -> IDENTIFIER','promisetype',1,'p_promisetype','cf_parse.py',185),
  ('promiseid -> IDENTIFIER','promiseid',1,'p_promiseid','cf_parse.py',190),
  ('arglist -> <empty>','arglist',0,'p_arglist','cf_parse.py',197),
  ('arglist -> LEFT_PAR RIGHT_PAR','arglist',2,'p_arglist','cf_parse.py',198),
  ('arglist -> LEFT_PAR arglist_items RIGHT_PAR','arglist',3,'p_arglist','cf_parse.py',199),
  ('arglist -> LEFT_PAR arglist_items COMMA RIGHT_PAR','arglist',4,'p_arglist','cf_parse.py',200),
  ('arglist_items -> arglist_item','arglist_items',1,'p_arglist_items','cf_parse.py',205),
  ('arglist_items -> arglist_items COMMA arglist_item','arglist_items',3,'p_arglist_items','cf_parse.py',206),
  ('arglist_item -> IDENTIFIER','arglist_item',1,'p_arglist_item','cf_parse.py',211),
  ('list -> LEFT_BRACE RIGHT_BRACE','list',2,'p_list','cf_parse.py',218),
  ('list -> LEFT_BRACE list_items RIGHT_BRACE','list',3,'p_list','cf_parse.py',219),
  ('list -> LEFT_BRACE list_items COMMA RIGHT_BRACE','list',4,'p_list','cf_parse.py',220),
  ('list_items -> list_item','list_items',1,'p_list_items','cf_parse.py',225),
  ('list_items -> list_items COMMA list_item','list_items',3,'p_list_items','cf_parse.py',226),
  ('list_item -> IDENTIFIER','list_item',1,'p_list_item','cf_parse.py',231),
  ('list_item -> QUOTED_STRING','list_item',1,'p_list_item','cf_parse.py',232),
  ('list_item -> NAKED_VAR','list_item',1,'p_list_item','cf_parse.py',233),
  ('list_item -> usefunction','list_item',1,'p_list_item','cf_parse.py',234),
  ('usefunction -> function_id farglist','usefunction',2,'p_usefunction','cf_parse.py',241),
  ('function_id -> IDENTIFIER','function_id',1,'p_function_id','cf_parse.py',246),
  ('function_id -> NAKED_VAR','function_id',1,'p_function_id','cf_parse.py',247),
  ('farglist -> LEFT_PAR RIGHT_PAR','farglist',2,'p_farglist','cf_parse.py',251),
  ('farglist -> LEFT_PAR farglist_items RIGHT_PAR','farglist',3,'p_farglist','cf_parse.py',252),
  ('farglist -> LEFT_PAR farglist_items COMMA RIGHT_PAR','farglist',4,'p_farglist','cf_parse.py',253),
  ('farglist_items -> farglist_item','farglist_items',1,'p_farglist_items','cf_parse.py',258),
  ('farglist_items -> farglist_items COMMA farglist_item','farglist_items',3,'p_farglist_items','cf_parse.py',259),
  ('farglist_item -> IDENTIFIER','farglist_item',1,'p_farglist_item','cf_parse.py',264),
  ('farglist_item -> QUOTED_STRING','farglist_item',1,'p_farglist_item','cf_parse.py',265),
  ('farglist_item -> NAKED_VAR','farglist_item',1,'p_farglist_item','cf_parse.py',266),
  ('farglist_item -> usefunction','farglist_item',1,'p_farglist_item','cf_parse.py',267),
  ('classguard -> CLASS_GUARD','classguard',1,'p_classguard','cf_parse.py',274),
  ('rval -> IDENTIFIER','rval',1,'p_rval','cf_parse.py',279),
  ('rval -> QUOTED_STRING','rval',1,'p_rval','cf_parse.py',280),
  ('rval -> NAKED_VAR','rval',1,'p_rval','cf_parse.py',281),
  ('rval -> list','rval',1,'p_rval','cf_parse.py',282),
  ('rval -> usefunction','rval',1,'p_rval','cf_parse.py',283),
]
